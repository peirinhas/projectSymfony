require 'yaml'
require 'fileutils'

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

config = {
  local: 'config/vg-local.yml'
}

options = YAML.load_file config[:local]

Vagrant.configure(options['vagrant_api_version']) do |config|

	config.vm.provider "virtualbox" do |vb|
		# machine cpus count
		vb.cpus = options['cpus']
		# machine memory size
		vb.memory = options['memory']		
	end
  
  # Disable automatic box update checking. If you disable this, then
  # boxes will only be checked for updates when the user runs
  # `vagrant box outdated`. This is not recommended.
  config.vm.box_check_update = options['box_check_update']
  
  config.vm.box = options['box']
  config.vm.hostname = options['hostname']
  config.vm.network options['network'], ip: options['ip']
  config.vm.synced_folder options['synced_folder'], options['synced_folder_father'], type: "virtualbox", owner: options['owner'], group: options['group'], mount_options: [options['mount_options']]

  config.vm.provider "virtualbox" do |vb|
      vb.name = options['alias']
  end
  
  # machine name (for vagrant console)
  config.vm.define options['machine_name']

  # View the documentation for the provider you are using for more
  # information on available options.

  # Define a Vagrant Push strategy for pushing to Atlas. Other push strategies
  # such as FTP and Heroku are also available. See the documentation at
  # https://docs.vagrantup.com/v2/push/atlas.html for more information.
  # config.push.define "atlas" do |push|
  #   push.app = "YOUR_ATLAS_USERNAME/YOUR_APPLICATION_NAME"
  # end
  config.vm.provision :hostmanager
  config.hostmanager.enabled            = true
  config.hostmanager.manage_host        = true
  config.hostmanager.ignore_private_ip  = false
  config.hostmanager.include_offline    = true

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  
  # provisioners
  # Ejecucion de Scripts
  config.vm.provision 'shell', path: 'scripts/Vagrant.bootstrap.sh', run: 'always'
end